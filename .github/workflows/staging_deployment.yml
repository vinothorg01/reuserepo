name: Reusable Deployment Workflow
on:
  workflow_call:
    secrets:
      temp_github_token:
        required: true

env:
  from_branch: ${{ github.event.pull_request.head.ref }}
  to_branch: ${{ github.event.pull_request.base.ref }}
  repo_name: ${{ github.event.repository.name }}

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    name: Staging Deployment
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.temp_github_token }}
          fetch-depth: 0

      - name: Staging Tag Creation
        run: |
          git remote set-url origin https://${{ secrets.temp_github_token }}@github.com/CondeNast/${{ env.repo_name }}.git
          git remote -v
          git fetch --all
          git checkout ${{ github.event.pull_request.base.ref }}
          git pull origin ${{ github.event.pull_request.base.ref }} --tags
          from_branch_name=`echo "${from_branch}"`
          echo "The PR is created from $from_branch_name branch and is merged with ${to_branch} branch successfully"
          tag_find=`git tag --sort version:refname | grep "$from_branch_name" | tail -n1`
          echo "The tags are $tag_find"
          #REGEX="^[a-zA-Z0-9.-]+$"
          REGEX="^[a-zA-Z0-9.#&/*'+-]+$"
          if [[ "$tag_find" =~ $REGEX ]]; then
            latest_tag_name=`git tag --sort version:refname | grep "$from_branch_name" | tail -n1`
            #latest_tag_version=`git tag --sort version:refname | grep "$from_branch_name" | tail -n1 | cut -d '-' -f 3 | cut -c2-`
            latest_tag_version=`printf "%s\n" "${latest_tag_name##*-}" | cut -c2-`
            echo "Latest tag is $latest_tag_name"
            echo $latest_tag_version
            major=0
            minor=0
            regex="([0-9]+).([0-9]+)"
            if [[ $latest_tag_version =~ $regex ]]; then
              major="${BASH_REMATCH[1]}"
              minor="${BASH_REMATCH[2]}"
            fi
            minor=$(echo $minor + 1 | bc)
            #latest_tag_version=`git tag --sort version:refname | tail -n1 | cut -d '-' -f 3 | cut -c2-`
            new_tag=${from_branch_name}-v${major}.${minor}
            git tag $new_tag
            git push origin ${{ github.event.pull_request.base.ref }} --tags
            echo "New tag created is $new_tag"            
          else
            first_tag=${from_branch_name}-v1.0
            echo "$first_tag"
            git tag $first_tag
            git push origin --tags
            echo "New tag created is $first_tag"
          fi

      - name: Staging Deployment
        run: |
          echo "deployment completed"