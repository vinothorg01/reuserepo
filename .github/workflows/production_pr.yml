name: Production PR Workflow
on:
  workflow_call:
    secrets:
      temp_github_token:
        required: true
      slack_webhook_url:
        required: true

env:
  from_branch: ${{ github.event.pull_request.head.ref }}
  to_branch: ${{ github.event.pull_request.base.ref }}
  repo_name: ${{ github.event.repository.name }}

jobs:
  build:
    runs-on: ubuntu-latest
    name: Checking File Change
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.temp_github_token }}
          fetch-depth: 0
          
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v14.6

      - name: File comparision
        id: comparision
        run: |
          git remote set-url origin https://${{ secrets.temp_github_token }}@github.com/CondeNast/${{ env.repo_name }}.git
          git fetch --all
          from_branch_name=`echo "${from_branch}"`
          to_branch_name=`echo "${to_branch}"`
          git switch -c $from_branch_name origin/$from_branch_name
          git checkout ${{ github.event.pull_request.head.ref }}
          git pull origin ${{ github.event.pull_request.head.ref }} --tags
          latest_tag_name=`git tag --sort version:refname | grep "$from_branch_name" | tail -n1`
          #REGEX="^[a-zA-Z0-9.-]+$"
          REGEX="^[a-zA-Z0-9.#&/*'+-]+$"
          if [[ "$latest_tag_name" =~ $REGEX ]]; then
            echo "Latest tag is $latest_tag_name"
            git checkout -b temp-${from_branch} $latest_tag_name
            new_branch=temp-${from_branch}
            echo "New branch is $new_branch"
            COUNT_VAR=0
            for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
              if [[ -f $file ]]; then
                git checkout ${from_branch}

                if [[ -f $file ]]; then
                  diff_result=`git diff $from_branch_name:$file $new_branch:$file`

                  if [ -z "$diff_result" ]; then
                    echo "$file content is same in both $from_branch_name branch and same commit in $to_branch_name branch"
                  else
                    echo "$file content differs while comparing in $from_branch_name branch and $to_branch_name branch"
                    COUNT_VAR=$((COUNT_VAR+1))
                    echo "[ $file ], " >> diff_files.txt
                  fi
                fi

              else
                git checkout ${from_branch}
                if [[ -f $file ]]; then
                  echo ::set-output name=newfile::yesnewfile
                  new_stmt="The $file file is newly created in ${from_branch} branch hence it is not in the staging. Please create PR for staging first"
                  echo "PRNT_NEW=`echo $new_stmt`" >> $GITHUB_ENV
                fi
              fi
              git checkout temp-${from_branch}
            done
            
            if [[ $COUNT_VAR == "0" ]]; then
              echo ::set-output name=differs::false
            else
              echo ::set-output name=differs::true
              echo "$(cat diff_files.txt)"
              echo "PRNT_FILES=`echo $(cat diff_files.txt)`" >> $GITHUB_ENV
            fi
            echo "COUNT_VAR=$COUNT_VAR" >> $GITHUB_ENV
          else
            echo ::set-output name=tagging::notag
          fi

      - name: Differed Files Slack notification
        if: ${{ (steps.comparision.outputs.differs == 'true') && (steps.comparision.outputs.newfile != 'yesnewfile') }}
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          notification_title: 'Files Differ: Contents of below files in PR differs while comparing it with ${{ github.event.pull_request.head.ref }} branch and Staging branch ${{ steps.comparision.outputs.tag_name }} tag commit.'
          message_format: '${{ env.PRNT_FILES }}'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.slack_webhook_url }}

      - name: Differed Files PR review adding
        if: ${{ (steps.comparision.outputs.differs == 'true') && (steps.comparision.outputs.newfile != 'yesnewfile') }}
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            Files Differ: Contents of below files in PR differs while comparing it with ${{ github.event.pull_request.head.ref }} branch and Staging branch ${{ steps.comparision.outputs.tag_name }} tag commit.
            ${{ env.PRNT_FILES }}
          repo-token: ${{ secrets.temp_github_token }}
          repo-token-user-login: 'vinothgitkumar'
          allow-repeats: false

      - name: No File Difference Slack notification
        if: ${{ (steps.comparision.outputs.differs == 'false') && (steps.comparision.outputs.newfile != 'yesnewfile') }}
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          notification_title: 'Files Are Not Differs:'
          message_format: 'Content of files in PR not differs hence Please approve this PR'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.slack_webhook_url }}

      - name: No File Difference review adding
        if: ${{ (steps.comparision.outputs.differs == 'false') && (steps.comparision.outputs.newfile != 'yesnewfile') }}
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            Files Are Not Differs: 
            Content of files in PR not differs hence Please approve this PR
          repo-token: ${{ secrets.temp_github_token }}
          repo-token-user-login: 'vinothgitkumar'
          allow-repeats: false

      - name: New Branch Slack notification
        if: ${{ steps.comparision.outputs.tagging == 'notag' }}
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          notification_title: 'New Feature Branch:'
          message_format: 'No commits and tags of ${{ github.event.pull_request.head.ref }} branch found on Staging branch hence it is a new Feature branch, please create PR against Staging branch first'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.slack_webhook_url }}

      - name: New Branch review adding
        if: ${{ steps.comparision.outputs.tagging == 'notag' }}
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            New Feature Branch: 
            No commits and tags of ${{ github.event.pull_request.head.ref }} branch found on Staging branch hence it is a new Feature branch, please create PR against Staging branch first
          repo-token: ${{ secrets.temp_github_token }}
          repo-token-user-login: 'vinothgitkumar'
          allow-repeats: false

      - name: New File Slack notification
        if: ${{ steps.comparision.outputs.newfile == 'yesnewfile' }}
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          notification_title: 'New File:'
          message_format: '${{ env.PRNT_NEW }}'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.slack_webhook_url }}

      - name: New File review adding
        if: ${{ steps.comparision.outputs.newfile == 'yesnewfile' }}
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            New File:
            ${{ env.PRNT_NEW }}
          repo-token: ${{ secrets.temp_github_token }}
          repo-token-user-login: 'vinothgitkumar'
          allow-repeats: false